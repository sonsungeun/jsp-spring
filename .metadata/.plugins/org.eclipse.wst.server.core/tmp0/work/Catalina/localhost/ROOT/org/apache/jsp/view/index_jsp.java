/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-08-11 03:45:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t*{margin: 0 auto;}\r\n");
      out.write("\th2{text-align: center;}\r\n");
      out.write("\ttable{\r\n");
      out.write("\t\twidth: 60%;\r\n");
      out.write("\t\tborder-collapse: collapse;\r\n");
      out.write("\t}\r\n");
      out.write("\ttable,th,td{\r\n");
      out.write("\tborder: 1px solid blue;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() {\r\n");
      out.write("\t$(\"#btn1\").click(function() {\r\n");
      out.write("\t\t$(\"#output\").empty();\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"/MyController01\",\r\n");
      out.write("\t\t\tdataType:\"xml\",\r\n");
      out.write("\t\t\ttype:\"get\",\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\tvar year=$(data).find(\"weather\").attr(\"year\");\r\n");
      out.write("\t\t\t\tvar month=$(data).find(\"weather\").attr(\"month\");\r\n");
      out.write("\t\t\t\tvar day=$(data).find(\"weather\").attr(\"day\");\r\n");
      out.write("\t\t\t\tvar hour=$(data).find(\"weather\").attr(\"hour\");\r\n");
      out.write("\t\t\t\t$(\"#output\").append(\"<h2>\"+year+\"년 \"+month+\"월 \"+day+\"일 \"+hour+\"시의 지역별 기상정보</h2>\");\r\n");
      out.write("\t\t\t\tvar msg = \"\";\r\n");
      out.write("\t\t\t\tmsg +=\"<table><thead><tr><th>지역</th><th>기상상태</th><tr></thead>\";\r\n");
      out.write("\t\t\t\tmsg +=\"<tbody>\";\r\n");
      out.write("\t\t\t\t$(data).find(\"local\").each(function(){\r\n");
      out.write("\t\t\t\t\tvar si=$(this).text();\r\n");
      out.write("\t\t\t\t\tvar nalsi=$(this).attr(\"desc\");\r\n");
      out.write("\t\t\t\t\tvar degree=$(this).attr(\"ta\");\r\n");
      out.write("\t\t\t\t\tvar rn_hr=$(this).attr(\"rn_hr1\");\r\n");
      out.write("\t\t\t\t\tvar icon=$(this).attr(\"icon\");\r\n");
      out.write("\t\t\t\t\tmsg+=\"<tr><td>\"+si+\"시</td><td>\"+nalsi+\"( <img src='http://www.kma.go.kr/images/icon/NW/NB\"+icon+\".png'> ),   온도 : \"+degree+\"도,    시간당 강수량 : \"+rn_hr+\"mm</td></tr>\";\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tmsg+=\"</tbody></table>\";\r\n");
      out.write("\t\t\t\t$(\"#output\").append(msg);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror:function(){\r\n");
      out.write("\t\t\t\talert(\"읽기실패\");\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btn2\").click(function() {\r\n");
      out.write("\t\t$(\"#output\").empty();\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"/MyController02\",\r\n");
      out.write("\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\ttype:\"get\",\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\tvar msg = \"\";\r\n");
      out.write("\t\t\t\tmsg +=\"<table><thead><tr><th>도서관이름</th><th>주소</th><th>휴관일</th><th>전화번호</th><tr></thead>\";\r\n");
      out.write("\t\t\t\tmsg +=\"<tbody>\";\r\n");
      out.write("\t\t\t\t$.each(data,function(k,v) {\r\n");
      out.write("\t\t\t\t\t$.each(v[\"row\"],function(data){\r\n");
      out.write("\t\t\t\t\t\tmsg+=\"<tr>\";\r\n");
      out.write("\t\t\t\t\t\tmsg+=\"<td>\"+this[\"LBRRY_NAME\"]+\"</td>\";\r\n");
      out.write("\t\t\t\t\t\tmsg+=\"<td>\"+this[\"ADRES\"]+\"</td>\";\r\n");
      out.write("\t\t\t\t\t\tmsg+=\"<td>\"+this[\"FDRM_CLOSE_DATE\"]+\"</td>\";\r\n");
      out.write("\t\t\t\t\t\tmsg+=\"<td>\"+this[\"TEL_NO\"]+\"</td>\";\r\n");
      out.write("\t\t\t\t\t\tmsg+=\"</tr>\";\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t\tmsg +=\"</tbody></table>\";\r\n");
      out.write("\t\t\t\t$(\"#output\").append(msg);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror:function(){\r\n");
      out.write("\t\t\t\talert(\"읽기실패\");\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<button id=\"btn1\">XML 파일 가져오기</button>\r\n");
      out.write("\t\t<button id=\"btn2\">JSON 파일 가져오기</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div id=\"output\">\r\n");
      out.write("\t<table id=\"mytable\">\r\n");
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
